---
import { Image } from 'astro:assets';
import defaultImageSizes from 'src/utils/defaultImageSizes';

import Container from '@c/Container.astro';
import { marked } from 'marked';
import HeroCarousel from '@c/na/HeroCarousel.astro';


const context = {
        heading: 'Context',
        text: 'Native Instruments offers a catalog of over 200 products with many different Bundle offerings. Additionally, NI is an eco-system company which provides the frameworks for other virtual instruments companies to build their products. In order to compliment this we wanted to offer download-portal-as-a-service to third party companies. Finally, there was an incoming company rebrand. A revamp of the download portal was overdue.',
};

const approach = {
        heading: 'My Approach',
        text: `I embarked on this project with a list of <a href='#pains'><u>refined pain points</u></a> from Customer Support and a cry from our new Director of Web & Services; to rebuild the age-old download portal in order to <a href='#webshop'><u>engage users more</u></a> and funnel users to the webshop. Planted with seemingly impossible challenges, this project required skill beyond my usual UX role. Both the tooling and the requirement of <a href='#subscription' target='_blank'><u>subscription</u></a> demanded cross-team and cross-department communication. I created an interactive visual Source of Truth to keep the xfn gears churning. Read on for the full story and help yourself to <a href='#design'>Figma files down below</u></a>!.</a>`,
};

const outcomes = {
        heading: 'Outcomes',
        text: `**Increased** Monthly Active Users** by 300% <br>
        Resolved** 8 of the top 20 **company pain points** [across all teams and products] <br>
        **Reduced average setup time** by 40% <br>
        **Increased the success rate of initial application launch** from 69% of users to 89% <br>
        **Decreased setup-related support tickets** by 45% <br>
        **Today, 7.5% of attributed revenue comes from Native Accessâ€™s touchpoint**`,
};

const TOC = [
        { text: 'Pains, Requirements & My Solutions', url: '#pains' },
        { text: 'Overcoming Challenges', url: '#overcoming' },
        { text: 'Building Wireframes', url: '#building' },
        { text: 'One Feedback Solution to Rule Them All', url: '#one' },
        { text: 'Design Patterns & Artifacts', url: '#design' },
];
---

<style>
        .outcomes {
                @apply text-lg tracking-[-0.01rem] text-brand-grey lg:text-[24pt]/[1.2];
        }
        .toc li {
                @apply line-clamp-1;
        }
        .toc {
                @apply !text-brand-pink;
        }
</style>
<style is:global>
        .outcomes strong {
                color: black !important;
                font-weight: 400;
        }
</style>
<section>
        <Container class='mx-auto pb-2 md:pb-14 lg:pb-16 2xl:pb-20'>
                <h1
                        class='text-5xl/[1.3] md:text-7xl/[1.3] lg:text-8xl xl:text-[112px]/[1.3] font-normal tracking-tight text-black pb-12 xl:pb-8 2xl:pb-14'>
                        <span>Native Access</span>
                </h1>
                <div class='flex flex-col leading-normal lg:flex-row gap-7 pb-14 text-[0.8125rem] md:text-sm lg:text-base 2xl:text-xl'>
                        <div class='basis-2/5'>
                                <h2 class='text-brand-grey pb-1'>Task</h2>
                                <p>
                                        Design and build a product portal allowing users to download and install products the users own, and explore
                                        new products.
                                </p>
                        </div>
                        <div class='lg:basis-[22%]'>
                                <h2 class='text-brand-grey pb-1'>Company</h2>
                                <p>Native Instruments</p>
                        </div>
                        <div class='lg:flex-1'>
                                <h2 class='text-brand-grey pb-1'>What I did</h2>
                                <div class='flex'>
                                        <p class='flex-1'>
                                                UX [Design Lead]<br /> Entity Maps<br />Wireframes<br />Prototypes<br />User Tests<br />
                                        </p>
                                        <p class='flex-1'>
                                                UI <br /> In-app Feedback<br /> Alpha / Beta Community<br /> B2B Design SDK<br /> Spec Writing
                                        </p>
                                </div>
                        </div>
                </div>

        <div class='relative pt-18 pb-12 md:pb-18 lg:pb-24 laptop:pb-32 2xl:pb-40'>
                <HeroCarousel
                alt='Native Access'
                />
        </div>

                <div class='flex flex-col gap-10 pb-10 lg:flex-row text-[0.8125rem] md:text-sm lg:text-base 2xl:text-xl laptop:gap-20'>
                        <div class='flex-1 laptop:basis-[45.1%] laptop:shrink-0 laptop:grow-0'>
                                <h2 class='text-brand-pink 2xl:pb-1'>{context.heading}</h2>
                                <div
                                        set:html={marked.parse(context.text)}
                                        class='text-[0.8125rem] leading-normal md:text-sm lg:text-base 2xl:text-xl'
                                />
                        </div>
                        <div class='flex-1'>
                                <h2 class='text-brand-pink 2xl:pb-1'>{approach.heading}</h2>
                                <div
                                        set:html={marked.parse(approach.text)}
                                        class='text-[0.8125rem] leading-normal md:text-sm lg:text-base 2xl:text-xl'
                                />
                        </div>
                </div>
                <div class='pb-10'>
                        <h2 class='text-brand-pink text-[0.8125rem] tracking-[-0.015rem] md:text-sm lg:text-base 2xl:text-xl'>{outcomes.heading}</h2>
                        <div
                                set:html={marked.parse(outcomes.text)}
                                class='outcomes'
                        />
                </div>
                <div class='pb-20'>
                        <h2 class='text-bran-pink text-[0.8125rem] tracking-[-0.015rem] text-brand-pink pb-3 md:text-sm lg:text-base 2xl:text-xl'>
                                Content
                        </h2>
                        <ol class='text-xl lg:text-[24pt]/[1.2] 2xl:text-[32px]'>
                                {
                                        TOC.map((item, index) => (
                                                <li>
                                                        <a
                                                                href={item.url}
                                                                class='hover:underline line-clamp-1 overflow-hidden'>
                                                                {index < 9 ? `0${index + 1}` : index}
                                                                <span class='text-brand-pink'>{item.text}</span>
                                                        </a>
                                                </li>
                                        ))
                                }
                        </ol>
                </div>
        </Container>
</section>
