---
import Container from '@c/Container.astro';
import { marked } from 'marked';
import { Image } from 'astro:assets';
import HeroCarousel from '@c/ub/HeroCarousel.astro';


import heroImage from '@i/ub/hero.png';

const context = {
        heading: 'Context',
        text: 'Vice President of software, Tim Adnitt, sensed that if 20 years of silos weren’t brought together, there’d be little hope in Native Instrument’s (NI) future. The hundreds of NI products plus the many third-party partner products require Preset browsing. Presets make up 90% of the usecases for all instruments and effects. Users want to be able to sort through the hundreds of products and their Presets with ease. Users also demand quick and easy ways to organize the Presets they create themselves. A unified browsing experience would allow users to quickly find the sound they need across hundreds of products and thousands of Presets, keeping them inspired and in their creative flow.',
};

const approach = {
        heading: 'My Approach',
        text: `With this project I hit the ground running, facilitating a stakeholders workshop in the first week. Except the ground was molting hot lava. These weren’t just any stakeholders but representatives of 20 years of silo’d products, all fighting for budget. After some courtesy gourmet vegan sushi, we spent the entire afternoon posting requirements and niceties on the wall. They got along. I set up regular syncs with each stakeholder thereafter. Meanwhile I got to work auditing all filetypes `,
};

//const outcomes = {
//        heading: 'Outcomes',
//        text: `**Increased** Monthly Active Users **by 300% <br>
//        Resolved** 8 of the top 20 **company pain points** [across all teams and products] <br>
//        Today, **7.5% of attributed revenue** comes from Native Access’s touchpoint`,
//};

const TOC = [
        { text: 'Driving with the C-levels', url: '#driving' },
        { text: 'Too Many Stakeholders in the Kitchen', url: '#too' },
        { text: 'Carry The Legacy... While Leaving it Behind', url: '#carry' },
        { text: 'Much Data, One Browser', url: '#much' },
        { text: 'Realizations', url: '#realizations' },
        { text: 'User Interviews', url: '#interviews' },
        { text: 'Resources & Artifacts', url: '#resources' },
];
---

<section>
        <Container class='mx-auto pb-14 md:pb-14 lg:pb-16 2xl:pb-20'>
                <h1 class='text-5xl/[1.3] md:text-7xl/[1.3] lg:text-8xl xl:text-[112px]/[1.3] font-normal tracking-tight pb-12 xl:pb-8 2xl:pb-14'>
                        <span>Universal Browser</span>
                </h1>
                <div class='flex flex-col leading-normal lg:flex-row gap-7 pb-14 text-[0.8125rem] md:text-sm lg:text-base 2xl:text-xl'>
                        <div class='basis-2/5'>
                                <h2 class='text-brand-grey pb-1'>Task</h2>
                                <p class='font-light'>
                                        To create one unified browsing experience which accommodates all Native Instruments and third-party products.
                                </p>
                        </div>
                        <div class='lg:basis-[22%]'>
                                <h2 class='text-brand-grey pb-1'>Company</h2>
                                <p class='font-light'>Native Instruments</p>
                        </div>
                        <div class='lg:flex-1'>
                                <h2 class='text-brand-grey pb-1'>What I did</h2>
                                <div class='flex'>
                                        <p class='flex-1 font-light'>
                                                Stakeholder Requirements<br />
                                                Prototypes<br />
                                                Wireframes<br />
                                                User Tests
                                        </p>
                                        <p class='flex-1 font-light'>
                                                Cross-platform Compatibility<br />
                                                Form Factors<br />
                                                Spec Writing<br />
                                                Data Model Synthesis
                                        </p>
                                </div>
                        </div>
                </div>
        </Container>

        <div class='relative pb-12 md:pb-18 lg:pb-24 laptop:pb-32 2xl:pb-40'>
                <HeroCarousel
                alt='Universal Browser'
                />
        </div>

        <Container class='mx-auto pb-14 md:pb-14 lg:pb-16 2xl:pb-20'>
                <div class='flex flex-col gap-10 pb-10 lg:flex-row text-[0.8125rem] md:text-sm lg:text-base 2xl:text-xl'>
                        <div class='flex-1 laptop:basis-[39.1%] laptop:shrink-0 laptop:grow-0'>
                                <h2 class='text-brand-browser-purple 2xl:pb-1'>{context.heading}</h2>
                                <div
                                        set:html={marked.parse(context.text)}
                                        class='text-[0.8125rem] leading-normal md:text-sm lg:text-base 2xl:text-xl'
                                />
                        </div>
                        <div class='flex-1'>
                                <h2 class='text-brand-browser-purple 2xl:pb-1'>{approach.heading}</h2>
                                <div
                                        set:html={marked.parse(approach.text)}
                                        class='text-[0.8125rem] leading-normal md:text-sm lg:text-base 2xl:text-xl'
                                />
                        </div>
                </div>
                {
                        /*
                <div class='pb-10'>
                        <h2 class='text-brand-pink text-[0.8125rem] tracking-[-0.015rem] md:text-sm lg:text-base 2xl:text-xl'>{outcomes.heading}</h2>
                        <div
                                set:html={marked.parse(outcomes.text)}
                                class='outcomes'
                        />
                </div>
                */
                }
                <div class='pb-20'>
                        <h2 class='text-brand-browser-purple text-[0.8125rem] tracking-[-0.015rem] pb-3 md:text-sm lg:text-base 2xl:text-xl'>
                                Content
                        </h2>
                        <ol class='text-xl lg:text-[24pt]/[1.2] 2xl:text-[32px]'>
                                {
                                        TOC.map((item, index) => (
                                                <li>
                                                        <a
                                                                href={item.url}
                                                                class='hover:underline text-brand-browser-purple line-clamp-1 overflow-hidden'>
                                                                <span class='text-white'>{index < 9 ? `0${index + 1}` : index}</span>
                                                                <span class='text-brand-browser-purple'>{item.text}</span>
                                                        </a>
                                                </li>
                                        ))
                                }
                        </ol>
                </div>
        </Container>
</section>
