---
import Icon from '@c/Icon.astro';

interface Props {
        iconBg: string;
        icon: string;
        direction: string;
        bubble: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | null;
        class?: string;
        innerClass?: string;
}

//const directionClasses = Astro.props.direction.split(' ').map((value: string) => {
const directionClasses = ['left', 'right', 'sm', 'md', 'lg', 'xl', 'laptop', '2xl'].map((value) => {
        const literal = new RegExp(`^${value}`);
        const breakpoint = new RegExp(`${value}:(left|right)`);
        if (breakpoint.test(Astro.props.direction)) {
                const right = new RegExp(`${value}:right`);
                return right.test(Astro.props.direction) ? `${value}:flex-row-reverse` : `${value}:flex-row`;
        }
        if (literal.test(Astro.props.direction)) {
                return /right/.test(Astro.props.direction) ? 'flex-row-reverse' : '';
        }
        return '';
});

const iconBg = Astro.props.iconBg || 'bg-brand-emerald';
---

<style>
        .pod {
                box-shadow:
                        -0.5px 0.5px 0px 0px rgba(255, 255, 255, 0.34) inset,
                        0.5px -0.5px 0px 0px rgba(255, 255, 255, 0.2) inset;
                filter: drop-shadow(-2px 2px 19px rgba(0, 0, 0, 0.12));
        }
        .content {
                @apply text-[#313131];
        }
</style>
<div class:list={[Astro.props.class]}>
        <div
                class='flex relative bg-white/60 min-h-10 rounded-[2rem] xl:pl-1 xl:pr-1 p-[9px] w-fit text-[8px] gap-2 2xl:gap-4 items-center backdrop-blur-md pod sm:text-[9px] md:text-[11px] lg:text-sm xl:text-base lg:h-15 xl:h-20 xl:rounded-[4rem]'
                class:list={[directionClasses, Astro.props?.innerClass]}>
                <div
                        class='h-6 w-6 lg:h-8 lg:w-8 xl:h-10 xl:w-10 laptop:h-14 laptop:w-14 flex justify-center items-center rounded-full flex-shrink-0'
                        class:list={[iconBg, Astro.props.direction === 'left' ? 'lg:ml-1 xl:ml-3' : 'lg:mr-1 xl:mr-3']}>
                        <Icon
                                name={Astro.props.icon}
                                class='text-white h-auto lg:w-6 xl:w-7'
                        />
                </div>
                <div
                        class='content w-max'
                        class:list={[Astro.props?.direction === 'left' && 'pr-1', Astro.props?.direction === 'right' && 'pl-3 lg:pl-[18px]']}>
                        <slot />
                </div>

                {
                        Astro.props.bubble ? (
                                <div
                                        class='absolute bg-white/60 h-2 w-2 rounded-full backdrop-blur-md pod lg:h-3 lg:w-3 xl:h-4 xl:w-4'
                                        class:list={[
                                                Astro.props.bubble === 'top-left' && 'top-0 -translate-y-1/2 left-0 -translate-x-1/2',
                                                Astro.props.bubble === 'top-right' && 'top-0 -translate-y-1/2 right-0 translate-x-1/2',
                                                Astro.props.bubble === 'bottom-right' && 'bottom-0 translate-y-1/2 right-0 translate-x-1/2',
                                                Astro.props.bubble === 'bottom-left' && 'left-0 -translate-x-1/2 bottom-0 translate-y-1/2',
                                        ]}
                                />
                        ) : null
                }
        </div>
</div>
